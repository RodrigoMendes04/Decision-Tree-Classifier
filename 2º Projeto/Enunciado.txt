1 Introdução Árvores de Decisão são uma forma muito útil de representar conhecimento de maneira compacta. Elas também são úteis porque sua representação pode ser compreendida por não especialistas. Árvores de decisão podem ser construídas manualmente, mas também podem ser aprendidas a partir de um conjunto de observações. Modelos de árvores de decisão se encaixam na categoria de algoritmos de aprendizado de máquina supervisionado, onde uma das variáveis é bem conhecida e classifica todas as observações. Esta variável é a que usamos para aprender o modelo. Usando como referência o material disponível no Capítulo 19 do nosso livro didático, Inteligência Artificial: uma Abordagem Moderna, de Peter Norvig e Stuart Russell (4ª edição), implemente um algoritmo para indução de árvores de decisão (similar ao ID3, mostrado no livro, Figura 19.5). Use como função de seleção de nó a entropia definida na página 679 (Seção 19.3.3 explica como escolher “bons” atributos para cada nível da árvore de decisão). É altamente recomendável ler o capítulo 19 para entender o que é uma árvore de decisão e seus objetivos. Este trabalho deve ser submetido via Moodle. Os alunos devem ser organizados em grupos de 3.

2 Estrutura da Árvore de Decisão A entrada para o seu programa será um conjunto de exemplos no formato CSV (Valores Separados por Vírgula). Este conjunto terá vários atributos (colunas da sua tabela CSV), sendo o último a variável de interesse para classificação (As Seções 19.1 a 19.3 do livro didático mostram um exemplo em formato tabular). A saída do seu programa deve estar no formato abaixo, para um conjunto de dados que tem 5 atributos (colunas atributo1, atributo2, atributo3, atributo4 e a variável de classe), cuja variável de classe tem 4 valores diferentes (classe1, classe2, classe3 e classe4). Em geral, atributo é a raiz de cada subárvore, valor# é um dos valores do atributo (um dos ramos da sua árvore), classe# é o valor de classe atribuído àquele ramo na árvore (e corresponde a uma folha) e contador# é um contador do número de exemplos correspondentes àquele ramo da árvore. Para este exemplo particular, existem 4 atributos, onde atributo1 tem 3 valores distintos, atributo2 tem 2 valores distintos, atributo3 tem 2 valores distintos e atributo4 tem 2 valores distintos. Este conjunto de dados tem 4 valores para a variável de classe (classe1, classe2, classe3 e classe4). Contador# corresponde à frequência de valores de um atributo de acordo com a variável de classe. <atributo1> valor1_1: <atributo2> valor2_1: classe1 (contador1) valor2_2: classe2 (contador2) valor1_2: classe3 (contador3) valor1_3: <atributo3> valor3_1: <atributo4> valor4_1: classe4 (contador4) valor4_2: classe2 (contador5) valor3_2: classe3 (contador6) 1 Figura 1: Árvore de Decisão

3 Conjuntos de Dados Neste trabalho, você precisará considerar 4 conjuntos de dados diferentes para testar suas implementações de árvores de decisão. Todos os 4 conjuntos de dados estão disponíveis na plataforma Moodle. Os três primeiros conjuntos de dados são descritos da seguinte forma: • restaurante: (exemplo do livro didático, página 675) contém informações sobre clientes e restaurantes (tipo de comida, tempo de espera, preço etc), e o atributo de classe (última coluna) indica se o cliente vai esperar ou não para comer naquele restaurante. A tarefa é gerar uma árvore de decisão (como explicado na aula teórica e seguindo o algoritmo ID3 disponível no livro didático). Esta árvore de decisão deve ser usada posteriormente para classificar (responder se o cliente vai esperar ou não) novos casos. • clima: contém informações sobre condições climáticas para jogar tênis. A tarefa é aprender uma árvore de decisão que possa decidir quais são as melhores condições para jogar tênis. • iris: contém informações numéricas sobre plantas de três classes: iris setosa, iris virginica e iris versicolor. Os atributos são comprimento e largura das pétalas e comprimento e largura das sépalas. A tarefa é aprender uma árvore de decisão que possa dizer a qual classe uma planta pertence, dado o comprimento e a largura de suas sépalas e pétalas. O quarto conjunto de dados que você precisará considerar é um conjunto de dados desafio que pode ser encontrado na plataforma Moodle e em http://archive.ics.uci.edu/ml/datasets/connect-4, onde cada linha corresponde a uma configuração de tabuleiro do jogo connect four. Induza uma árvore de decisão para este conjunto de dados e substitua a função de utilidade usada no seu Trabalho 1 pela previsão desta árvore para decidir onde jogar a seguir. Você precisará adicionar um cabeçalho a este arquivo e, provavelmente, um identificador para cada instância, dependendo da sua implementação). Qual é o impacto de usar a árvore de decisão para escolher o próximo movimento em vez de usar a função de utilidade? Nota importante: O conjunto de dados iris contém valores numéricos. Você precisa implementar uma forma de discretizar esses valores para minimizar o tamanho da sua árvore de decisão.

4 Trabalho a desenvolver O objetivo deste trabalho é escrever um programa que aprenda uma árvore de decisão a partir de um conjunto de dados de treinamento usando o procedimento ID3. Seu programa precisa ser capaz de ler qualquer conjunto de dados e aprender a árvore de decisão apropriada. Você não deve escrever um programa para cada um dos conjuntos de dados. Isso significa que você precisará ler a tabela CSV de um arquivo e armazená-la na memória para qualquer tabela de entrada. Além de aprender uma árvore de decisão, seu programa também deve estar preparado para aceitar como entrada um arquivo com exemplos de teste, ou seja, após gerar sua árvore, você deve ser capaz de aplicar sua árvore a novos exemplos e ser capaz de classificá-los adequadamente. Por exemplo, suponha que você gerou uma árvore para o problema do restaurante. Agora, você pode inserir novos exemplos (sem qualquer classe/etiqueta) e ser capaz de dar-lhes uma classe apropriada. Nota importante: Não será permitido usar scikit-learn ou outras bibliotecas para definir e treinar automaticamente as árvores de decisão. Bibliotecas externas serão permitidas apenas para gerenciar e pré-processar dados de entrada.